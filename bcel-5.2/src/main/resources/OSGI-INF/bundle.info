\u001B[1mSYNOPSIS\u001B[0m
    ${project.description}

    Original Maven URL:
        \u001B[33mmvn:${pkgGroupId}/cglib-nodep/${pkgVersion}\u001B[0m

\u001B[1mDESCRIPTION\u001B[0m
    The Byte Code Engineering Library (BCEL) is intended to give users a convenient possibility to analyze,
    create, and manipulate (binary) Java class files (those ending with .class). Classes are represented by
    objects which contain all the symbolic information of the given class: methods, fields and byte code
    instructions, in particular.

    Such objects can be read from an existing file, be transformed by a program (e.g. a class loader at
    run-time) and dumped to a file again. An even more interesting application is the creation of classes
    from scratch at run-time.
    The Byte Code Engineering Library (BCEL) may be also useful if you want to learn about the Java Virtual
    Machine (JVM) and the format of Java .class files.

    BCEL contains a byte code verifier named JustIce, which usually gives you much better information about
    what's wrong with your code than the standard JVM message.

    BCEL is already being used successfully in several projects such as compilers, optimizers, obsfuscators,
    code generators and analysis tools. Unfortunately there hasn't been much development going on over the past
    few years. Feel free to help out or you might want to have a look into the ASM project at objectweb.

\u001B[1mSEE ALSO\u001B[0m
    \u001B[36mhttp://jakarta.apache.org/bcel/\u001B[0m
